# Generated by Django 4.2.10 on 2024-10-17 15:01

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('auction', '0010_auction_search_vector'),
    ]

    operations = [
    migrations.RunSQL(
        # 1. Create a trigger function to update the search vector

        """
            CREATE OR REPLACE FUNCTION auction_search_vector_update() RETURNS trigger AS $$
            BEGIN
                NEW.search_vector := to_tsvector('english', coalesce(NEW.title, '') || ' ' || coalesce(NEW.description, ''));
                RETURN NEW;
            END
            $$ LANGUAGE plpgsql;
            """,
            reverse_sql="""
            DROP FUNCTION IF EXISTS auction_search_vector_update();
            """
        ),
        # 2. Create a trigger to automatically update search_vector on INSERT or UPDATE
        migrations.RunSQL(
            """
            CREATE TRIGGER auction_search_vector_trigger
            BEFORE INSERT OR UPDATE ON auction_auction
            FOR EACH ROW EXECUTE FUNCTION auction_search_vector_update();
            """,
            reverse_sql="""
             DROP TRIGGER IF EXISTS auction_search_vector_trigger ON auction_auction;
             """
        ),

        # 3. Create the GIN index for the search vector
        migrations.RunSQL(
            """
            CREATE INDEX auction_search_idx
            ON auction_auction
            USING gin(to_tsvector('english', title || ' ' || description));
            """,
            reverse_sql="""
             DROP INDEX IF EXISTS auction_search_idx;
             """
        )
]
