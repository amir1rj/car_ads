
برای اضافه کردن وردپرس با دیتابیس MySQL و تنظیم آن در آدرس /blog، باید چند مرحله را طی کنید. ابتدا تنظیمات Docker Compose را برای سرویس‌های وردپرس و MySQL اضافه می‌کنیم و سپس تنظیمات Nginx را برای مسیریابی درخواست‌ها به وردپرس انجام می‌دهیم.

۱. تنظیمات Docker Compose
ابتدا تنظیمات مربوط به سرویس‌های وردپرس و MySQL را به فایل docker-compose.yml اضافه می‌کنیم:

yaml
Copy code
version: '3.9'

services:
  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    networks:
      - car_ads
    restart: always

  celery_worker:
    container_name: celery_worker
    command: "celery -A car_ads worker -l INFO"
    depends_on:
      - main
      - redis
      - postgres
    build: .
    environment:
      - C_FORCE_ROOT="true"
      - DB_HOST=postgres
      - DB_USER=root
      - DB_NAME=car_ads_db
      - DB_PASS=amir1234amir
    networks:
      - car_ads
    volumes:
      - .:/source/
    restart: always

  celery_beat:
    container_name: celery_beat
    command: "celery -A car_ads beat -l info"
    build: .
    depends_on:
      - main
      - postgres
      - redis
      - celery_worker
    environment:
      - C_FORCE_ROOT="true"
      - DB_HOST=postgres
      - DB_USER=root
      - DB_NAME=car_ads_db
      - DB_PASS=amir1234amir
    networks:
      - car_ads
    volumes:
      - .:/source/
    restart: always

  main:
    build: .
    command: sh -c "python manage.py migrate && uvicorn car_ads.asgi:application --host 0.0.0.0 --port 8000 --ws websockets"
    container_name: car_ads_container
    volumes:
      - .:/source/
    ports:
      - "8000:8000"
    networks:
      - car_ads
    restart: always

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_DB=car_ads_db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=amir1234amir
    networks:
      - car_ads
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    container_name: nginx
    command: nginx -g 'daemon off;'
    image: nginx:latest
    depends_on:
      - main
    networks:
      - car_ads
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

  wordpress:
    image: wordpress:latest
    container_name: wordpress
    environment:
      WORDPRESS_DB_HOST: wordpress_db:3306
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: your_db_password
      WORDPRESS_DB_NAME: wordpress
    ports:
      - "8080:80"
    networks:
      - car_ads
    restart: always

  wordpress_db:
    image: mysql:5.7
    container_name: wordpress_db
    environment:
      MYSQL_ROOT_PASSWORD: your_db_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: root
      MYSQL_PASSWORD: your_db_password
    volumes:
      - wordpress_db_data:/var/lib/mysql
    networks:
      - car_ads
    restart: always

networks:
  car_ads:

volumes:
  postgres_data:
  wordpress_db_data:
۲. تنظیمات Nginx
برای مسیریابی درخواست‌ها به وردپرس، فایل nginx.conf خود را به‌روزرسانی کنید:

nginx
Copy code
user www-data;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log;
    client_max_body_size 100M;

    upstream main {
        server main:8000;
    }

    upstream wordpress {
        server wordpress:80;
    }

    server {
        listen 80;
        server_name 82.115.18.105;
        charset utf-8;

        location / {
            proxy_pass http://main;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
            add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
            proxy_redirect off;

            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
                add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain charset=UTF-8';
                add_header Content-Length 0;
                return 204;
            }
        }

        location /ws/ {
            proxy_pass http://main;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
            add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
        }

        location /blog/ {
            proxy_pass http://wordpress;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}